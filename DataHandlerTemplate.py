# -*- coding: utf-8 -*-
"""
Created on Mon May  4 20:10:22 2020

@author: rhann
"""

class DataHandler:
    
    def getData(self): # method to call measurement data API
        
        # call TokenHandler() and get access token
        # prepare REST request w/ access token
        # call API and get JSON payload containing measurement data and QA metadata
        # convert JSON object to QAConfig dataframe and measurement dataframe
        
        return measurementFrame, QAConfigFrame
    
    def putQCFlagData(self, QFrame):
        
        QCFlagData = self.QFrame        # QFrame is the dataframe generated by the QC_Core module that contains the computed QC Flags for each record
        # convert dataframe to JSON 
        # call TokenHandler and get access token
        # prepare REST request w/ payload and access token
        # call putQAFlagData API and POST JSON payload to API
        
    def putHourlyAverageData(self, averagesData):
        
        AveragesDataframe = self.averagesData            # averagesData is the dataframe generated by the QC_Core module that contains the aggregated subhourly data
        # convert dataframe to JSON object
        # call TokenHandler and get access token
        # prepare REST request w/ payload and access token
        # call putHourlyAverages API and POST JSON payload to API
        
        
        
        
        